#!/bin/bash

# make.code
# =========
# Author R.J.Barnes
#
# Purpose:
#
# Make source code into binaries
#
# Syntax:
#
# make.code project pkg system
#
# Description:
#
# Make source code into a set of binaries.
#

set -e

prj=${1}
pkg=${2}
sys=${3}
build=${BUILD}

pkgdir=`find ${build}/${prj}/package/ -name "${pkg}*" | sort | tail -1`
ver=`tail -1 ${pkgdir}/version.txt | cut -f 2,3 -d'.'`

log="${LOGPATH}/${prj}-${pkg}.${sys}.build.${ver}"
dtval=`date +%Y%m%d.%H%M`

makeaction() {

  compile=${1}
  project=${2}
  module=${3}
  type=${4}
  mode=${5} 
 
  opt=""
  ctmp=${compile}
  if test "${compile}" = "link"
  then
   ctmp="lib"
   opt="-t link"
  fi

  if test "${ctmp}" != "${type}" 
  then
    return
  fi

  if test "${module%%/*}" = "codebase"
  then
    src=${CODEBASE}/${module#codebase/}
  else
    src=${USR_CODEBASE}/${module#usr/codebase/}
  fi

  if test "${mode}" = "stdin"
  then
    echo ${module##*/} ${opt}
    echo ${module##*/} | makeall -vb ${opt} \
         ${src%/*} stdin >> ${log}.${dtval}


  else
   if test ! -d ${src}
    then
      src=${src}.?.??
    fi
    makeall -vb ${opt} ${src} >> ${log}.${dtval}
   
  fi
}
 
makemodule() {
  compile=${1}
  fname=${2}
  modlst=`cat ${fname} | tr " " "+" `

  for mod in ${modlst}
  do
    if test -z "${mod}"  
    then 
      continue
    fi 
    if test "${mod:0:1}" = "#" 
    then 
      continue
    fi
    prm=${mod//+/ }
    makeaction ${compile} ${prm}
  done
}


makemodule link ${pkgdir}/list.txt
makemodule lib ${pkgdir}/list.txt 
makemodule bin ${pkgdir}/list.txt 






