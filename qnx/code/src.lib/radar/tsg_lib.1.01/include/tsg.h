/* tsg.h
   =====
   Author: R.J.Barnes
*/


#define CLOCK_PERIOD	10		/* clock period in microseconds */

struct tsg_buf {
  unsigned char *code_byte;
  unsigned char *rep_byte;
  int len;
};

struct tsg_parms {
  int nrang,          /* number of ranges */
	  frang,          /* distance to first range */
	  rsep,           /* range gate separation */
      smsep,          /* sample separation */
      lagfr,
      txpl,           /* length of pulse */
      mppul,          /* number of pulses in the sequence */
  	  mpinc,		  /* multi-pulse increment */
	  mlag,           /* maximum lag in the sequence */
	  nbaud,		  /* number of baud in the phase code */
      samples;		  /* number of samples generated by the sequence */	
  int *pat,		      /* pointer to the pulse pattern */
	  *code;		  /* pointer to the phase code table */
};

struct tsg_table {
  int num;
  int max;
  int *active;
  struct tsg_parms *buf;
};

#define TSG_OK 0
#define TSG_INV_RSEP 1
#define TSG_NO_SMSEP 2
#define TSG_INV_MPPUL_SMSEP 3
#define TSG_INV_PAT 4
#define TSG_INV_MPINC_SMSEP 5
#define TSG_INV_LAGFR_SMSEP 6
#define TSG_INV_DUTY_CYCLE 7
#define TSG_INV_ODD_SMSEP 8
#define TSG_INV_TXPL_BAUD 9
#define TSG_INV_MEMORY 10
#define TSG_INV_PHASE_DELAY 11

struct tsg_buf *make_tsg(struct tsg_parms *,int *flg);
void free_tsg(struct tsg_buf *);

struct tsg_table *make_tsg_table(int max);
void free_tsg_table(struct tsg_table *ptr);
int comp_tsg(struct tsg_parms *p1, struct tsg_parms *p2);
int check_tsg(struct tsg_parms *tsg,struct tsg_table *tsgtab);
int add_tsg(struct tsg_parms *tsg,struct tsg_table *tsgtab);
void remove_tsg(struct tsg_table *tsgtab,int id);